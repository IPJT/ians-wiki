"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[501],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),f=o,g=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return r?n.createElement(g,i(i({ref:t},p),{},{components:r})):n.createElement(g,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9220:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:3},i="Misc",s={unversionedId:"PersonalWiki/Javascript/Misc",id:"PersonalWiki/Javascript/Misc",title:"Misc",description:"Logging behaviour in browsers (logging objects that are mutated)",source:"@site/docs/PersonalWiki/Javascript/Misc.md",sourceDirName:"PersonalWiki/Javascript",slug:"/PersonalWiki/Javascript/Misc",permalink:"/ians-wiki/docs/PersonalWiki/Javascript/Misc",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/PersonalWiki/Javascript/Misc.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"personalWiki",previous:{title:"Arrays",permalink:"/ians-wiki/docs/PersonalWiki/Javascript/Arrays"},next:{title:"Things I've learnt",permalink:"/ians-wiki/docs/PersonalWiki/tableOfContent"}},c={},l=[{value:"Logging behaviour in browsers (logging objects that are mutated)",id:"logging-behaviour-in-browsers-logging-objects-that-are-mutated",level:2},{value:"The difference between || (logical or operator) and ?? (nullish coalescing operator) operators in Javascript &amp; NodeJS",id:"the-difference-between--logical-or-operator-and--nullish-coalescing-operator-operators-in-javascript--nodejs",level:2}],p={toc:l};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"misc"},"Misc"),(0,o.kt)("h2",{id:"logging-behaviour-in-browsers-logging-objects-that-are-mutated"},"Logging behaviour in browsers (logging objects that are mutated)"),(0,o.kt)("p",null,"See this ",(0,o.kt)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/mutating-objects-what-will-be-logged-in-the-console-ffb24e241e07/"},"link")),(0,o.kt)("h2",{id:"the-difference-between--logical-or-operator-and--nullish-coalescing-operator-operators-in-javascript--nodejs"},"The difference between || (logical or operator) and ?? (nullish coalescing operator) operators in Javascript & NodeJS"),(0,o.kt)("p",null,"In short, the difference between the two operators comes down to the difference between falsy and null/undefined. The nullish coalescing operator (??) takes the right operand only when the left side is set to null or undefined whereas the the logical or operator (||) takes the right operand in the case of a falsy value \u2014 which includes empty string, 0, false, NaN, etc. Having said that, we could think of the ?? operator as subset of the ||.\nif\n",(0,o.kt)("img",{alt:"A few examples that showcases the differences",src:r(4056).Z,width:"461",height:"647"})))}u.isMDXComponent=!0},4056:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/logical_or_operator-11b6fcc39a3f370ce5d7bc268f9fafd1.png"}}]);