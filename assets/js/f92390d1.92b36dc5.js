"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[908],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),g=a,y=u["".concat(p,".").concat(g)]||u[g]||d[g]||o;return n?r.createElement(y,i(i({ref:t},l),{},{components:n})):r.createElement(y,i({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9972:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="Type Predicates",s={unversionedId:"PersonalWiki/Typescript/Type Predicates",id:"PersonalWiki/Typescript/Type Predicates",title:"Type Predicates",description:"With the use of type predicates we can change types/narrow them down throughout the code. Consider the following example:",source:"@site/docs/PersonalWiki/Typescript/Type Predicates.md",sourceDirName:"PersonalWiki/Typescript",slug:"/PersonalWiki/Typescript/Type Predicates",permalink:"/ians-wiki/docs/PersonalWiki/Typescript/Type Predicates",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/PersonalWiki/Typescript/Type Predicates.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"personalWiki",previous:{title:"Things I've learnt",permalink:"/ians-wiki/docs/PersonalWiki/tableOfContent"},next:{title:"Cheatsheet",permalink:"/ians-wiki/docs/PersonalWiki/Git/Quick reference"}},p={},c=[],l={toc:c};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"type-predicates"},"Type Predicates"),(0,a.kt)("p",null,"With the use of type predicates we can change types/narrow them down throughout the code. Consider the following example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'type Dog = {\n  bark: () => void;\n};\n\ntype Cat = {\n  mjau: () => void;\n};\n\nfunction isDog(pet: Dog | Cat): pet is Dog {\n  //The return type of the function is a type predicate\n  //return type is a type predicate\n  return (pet as Dog).bark !== undefined;\n}\n\nconst randomPet = {} as Dog | Cat;\n\nif (Math.random() < 0.5) {\n  (randomPet as Cat).mjau = () => console.log("Mjau");\n} else {\n  (randomPet as Dog).bark = () => console.log("Wof");\n}\n\nif (isDog(randomPet)) {\n  randomPet.bark(); //Due to the isDog having a having a return type that is a "type predicate" we know that the "randomPet" is a Dog\n} else {\n  randomPet.mjau(); //Due to the isDog having a having a return type that is a "type predicate" we know that the "randomPet" is a Cat\n}\n')),(0,a.kt)("p",null,"Not declaring the return type as a type predicate implies what is showcased in the following image:\n",(0,a.kt)("img",{alt:"Without type predicate",src:n(5043).Z,width:"1461",height:"819"})),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/play?#code/C4TwDgpgBAIg9gcygXigbwFBWzgRgQwCcBrALigAoBKZAPgDc4BLAEwwF8MNRIoBhfMBTosObAFsAVvgCu5anUasOXAGYyAdgGNgTOBqhMAzvAQVIwcqagAffoKrkLho7ETooAek+EIwGYQGPNDGUPhQwVBgvixMWoIQor7+gZTO+K6mVAB0BCRQAITIqJosEKpMGhBsnBha+kZChPgaLHDiAAp+wmjsYZnudgLAXEyqFACyggAW2c2t7dRQADxQAAzZAKxUmGLYFPNtnd0Z9sA5UrLCS3RQ9RpGcAA2ENlPiBQARBPSMp9UHCgECeRmguz2BxaRy6QlOWVyRGI1yoKFodwaz1e7zMnwA6nBVP8VBgxhRjKZIQtjucdqIxId2jCESQlt4YDJoMA4BFpiETO5pvh6JUkOFBcKNKKoMkAkFwJzBUJQuFPpFotU4glPlAAO7QYgaOA6nmCHnQT4M6na5VuJCA4GgkR7aVQxl+bKXGTUNkciLc4C8lzWcUisJQEOSsMy1KRAOmm2q+VRGKa4AQbV6qAGo0moQB82WmHW1zhYZQDhAA"},"Link to sandbox environment")))}d.isMDXComponent=!0},5043:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/type_predicate-ee893e26f36d7e83584272644d7e7ea8.png"}}]);